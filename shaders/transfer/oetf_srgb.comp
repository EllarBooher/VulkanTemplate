#version 460

// In-place convert an image from linear encoding to nonlinear encoding.
// This is intended as the final step before presentation

layout(local_size_x = 16, local_size_y = 16) in;
layout(rgba16f, set = 0, binding = 0) uniform image2D image;

vec3 to_nonlinear(const vec3 linear)
{
    // Transfer implementation as defined in
    // https://www.color.org/chardata/rgb/srgb.xalter

    const bvec3 cutoff = lessThanEqual(linear.rgb, vec3(0.0031308));
    const vec3 lower = vec3(12.92) * linear.rgb;
    const vec3 higher = pow(linear.rgb, vec3(1 / 2.4)) * vec3(1.055) - vec3(0.055);

    return mix(higher, lower, cutoff);
}

void main()
{
    vec2 size = imageSize(image);
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

    if (texelCoord.x < size.x && texelCoord.y < size.y)
    {
        const vec4 linear = imageLoad(image, texelCoord);
        const vec3 nonlinear = to_nonlinear(linear.rgb);
        imageStore(image, texelCoord, vec4(nonlinear, linear.a));
    }
}